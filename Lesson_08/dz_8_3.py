"""Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться."""

# реализация через собственный класс-исключение и функцию isdigit(). Отрицательные числа не добавляются
class OwnError(Exception):
    def __str__(self):
        return "Вы ввели не число"


a = 1
my_list = []
while a < 2:
    b = input("Введите число: ")
    if b == 'stop':
        break
    try:
        if str.isdigit(b):
            my_list.append(int(b))
        else:
            raise OwnError()
    except OwnError as err:
        print(err)
        continue
print(my_list)

# реализация без собственного класса исключения и isdigit(). Отрицательные числа попадают в список
"""
a = 1
my_list = []
while a < 2:
    b = input("Введите число: ")
    if b == 'stop':
        break
    try:
        b = int(b)
        my_list.append(b)
    except:
        continue
print(my_list)"""
